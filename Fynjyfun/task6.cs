//Лаба №6
//С клавиатуры вводится длина целочисленного массива
//Элементы массива генерируются случайным образом
//Создать на его основе массив из средних арифметических соседних элементов

using System;

namespace Second
{
	/// <summary>
	/// Main class - основной класс программы
	/// для создания массива средних арифметических соседних элементов исходного массива
	/// Элементы массива генерируются случайным образом
	/// </summary>

	class MainClass
	{
		/// <summary>
		/// Точка входа программы, основной метод.
		/// </summary>
		/// <param name="args">Аргументы для запуска в командной строке(терминале)</param>

		public static void Main (string[] args)
		{
			const int MAX_N = 10;	//Максимальный размер массива

			int N;	//Размер массива
			Random rnd = new Random ();	//Генератор случайных чисел
			int i;	//Счетчик итераций циклов


			Console.WriteLine ("\nВведите длину массива! (не более " + MAX_N + ")");

			//Цикл для ввода размера исходного массива
			do 
			{
				//Добавить проверку на допустимые символы (только цифры)
				// А еще диалог о том, не хотите ли выйти из программы, если неверно указали размер матрицы

				//Ввод длины массива с клавиатуры
				N = int.Parse (Console.ReadLine());

				//Проверки
				if (N <= 0 || N > MAX_N) 
				{
					Console.WriteLine ("Некорректная длина массива! Попробуйте ввести еще раз.");
				}

			}
			while (N <= 0 || N > MAX_N);

			Console.Write ("N = " + N + "\n\n");	//Эхо-печать введенного значения длины массива

			//Динамическое выделение памяти под исходный и измененный массивы
			int[] Array = new int[N];	//Исходный
			int[] Array2 = new int[N];	//Измененный

			Console.WriteLine ("Исходный массив:");

			//Цикл для заполнения исходного массива случайными целыми числами (от 1 до 100)
			//Эхо-печать
			for (i = 0; i < N; i++)
			{
				Array [i] = rnd.Next (1, 100);
				Console.Write (Array [i] + " ");
			}

			Console.WriteLine ("\nМассив средних арифметических соседних элементов:");

			//Цикл для заполнения второго (измененного) массива
			//средними арифметическими соседних элементов исходного массива
			for (i = 0; i < N; i++)
			{

				if (i == 0)
				{
					Array2 [i] = Array [i + 1];
				} 
				else
				{

					if (i == N - 1)
					{
						Array2 [N - 1] = Array [N - 2];
					}
					else					
					Array2 [i] = (Array [i - 1] + Array [i + 1]) / 2;
				}
			
				Console.Write (Array2[i] + " ");

			}

			Console.WriteLine ();

		}
	}
}
